{"mappings":"AAAA,MAGaA,EAAY,CACvB,CACEC,KAAM,cACNC,KANW,UAQb,CACED,KAAM,YACNC,KAVW,UAYb,CACED,KAAM,QACNC,KAdW,UAgBb,CACED,KAAM,aACNC,KAlBW,UAoBb,CACED,KAAM,aACNC,KAtBW,UAwBb,CACED,KAAM,QACNC,KA1BW,UA4Bb,CACED,KAAM,WACNC,KA9BW,UAgCb,CACED,KAAM,WACNC,KAlCW,UAoCb,CACED,KAAM,QACNC,KAtCW,UAwCb,CACED,KAAM,QACNC,KA1CW,UA4Cb,CACED,KAAM,OACNC,KA9CW,UAgDb,CACED,KAAM,UACNC,KAlDW,UAoDb,CACED,KAAM,SACNC,KAtDW,UAwDb,CACED,KAAM,aACNC,KA1DW,UA4Db,CACED,KAAM,YACNC,KA9DW,UAgEb,CACED,KAAM,UACNC,KAlEW,UAoEb,CACED,KAAM,UACNC,KAtEW,UAwEb,CACED,KAAM,UACNC,KA1EW,UA4Eb,CACED,KAAM,UACNC,KA9EW,UAgFb,CACED,KAAM,WACNC,KAlFW,UAoFb,CACED,KAAM,SACNC,KAtFW,UAwFb,CACED,KAAM,SACNC,KA1FW,UA4Fb,CACED,KAAM,YACNC,KA9FW,UAgGb,CACED,KAAM,SACNC,KAlGW,UAoGb,CACED,KAAM,OACNC,KAtGW,UAwGb,CACED,KAAM,WACNC,KA1GW,UA4Gb,CACED,KAAM,UACNC,KA9GW,UAgHb,CACED,KAAM,WACNC,KAlHW,UAoHb,CACED,KAAM,UACNC,KAtHW,UAwHb,CACED,KAAM,QACNC,KA1HW,UA4Hb,CACED,KAAM,SACNC,KA9HW,UAgIb,CACED,KAAM,aACJC,KAlIS,UAoIb,CACED,KAAM,OACNC,KAtIW,UAwIb,CACED,KAAM,OACNC,KA1IW,UA4Ib,CACED,KAAM,OACNC,KA9IW,UAgJb,CACED,KAAM,WACNC,KAlJW,UAoJb,CACED,KAAM,WACNC,KAtJW,UAwJb,CACED,KAAM,OACNC,KA1JW,UA4Jb,CACED,KAAM,YACNC,KA9JW,UAgKb,CACED,KAAM,SACNC,KAlKW,UAoKb,CACED,KAAM,OACNC,KAtKW,UAwKb,CACED,KAAM,aACNC,KA1KW,UA4Kb,CACED,KAAM,SACNC,KA7Ke,cA+KjB,CACED,KAAM,QACNC,KAjLe,cAmLjB,CACED,KAAM,SACNC,KArLe,cAuLjB,CACED,KAAM,UACNC,KAzLe,cA2LjB,CACED,KAAM,MACNC,KA7Le,cA+LjB,CACED,KAAM,OACNC,KAjMe,cAmMjB,CACED,KAAM,QACNC,KArMe,cAuMjB,CACED,KAAM,UACNC,KAzMe,cA2MjB,CACED,KAAM,SACNC,KA7Me,cA+MjB,CACED,KAAM,SACNC,KAjNe,cAmNjB,CACED,KAAM,UACNC,KArNe,cAuNjB,CACED,KAAM,SACNC,KAzNe,cA2NjB,CACED,KAAM,OACNC,KA7Ne,cA+NjB,CACED,KAAM,WACNC,KAjOe,cAmOjB,CACED,KAAM,OACNC,KArOe,cAuOjB,CACED,KAAM,QACNC,KAzOe,cA2OjB,CACED,KAAM,SACNC,KA7Oe,cA+OjB,CACED,KAAM,UACNC,KAjPe,cAmPjB,CACED,KAAM,OACNC,KArPe,cAuPjB,CACED,KAAM,QACNC,KAzPe,cA2PjB,CACED,KAAM,OACNC,KA7Pe,cA+PjB,CACED,KAAM,UACNC,KAjQe,cAmQjB,CACED,KAAM,UACNC,KArQe,cAuQjB,CACED,KAAM,UACNC,KAzQe,cA2QjB,CACED,KAAM,SACNC,KA7Qe,cA+QjB,CACED,KAAM,OACNC,KAjRe,cAmRjB,CACED,KAAM,WACNC,KArRe,cAuRjB,CACED,KAAM,QACNC,KAzRe,cA2RjB,CACED,KAAM,WACNC,KA7Re,cA+RjB,CACED,KAAM,YACNC,KAjSe,cAmSjB,CACED,KAAM,OACNC,KArSe,cAuSjB,CACED,KAAM,OACNC,KAzSe,cA2SjB,CACED,KAAM,OACNC,KA7Se,cA+SjB,CACED,KAAM,MACNC,KAjTe,cAmTjB,CACED,KAAM,SACNC,KArTe,cAuTjB,CACED,KAAM,OACNC,KAzTe,cA2TjB,CACED,KAAM,OACNC,KA7Te,cA+TjB,CACED,KAAM,aACJC,KAAIC,qBAER,CACEF,KAAM,SACNC,KAAMC,qBAER,CACEF,KAAM,QACNC,KAAMC,qBAER,CACEF,KAAM,WACNC,KAAMC,qBAER,CACEF,KAAM,SACNC,KAAMC,qBAER,CACEF,KAAM,OACNC,KAAMC,qBAER,CACEF,KAAM,OACNC,KAAMC,qBAER,CACEF,KAAM,OACNC,KAAMC,qBAER,CACEF,KAAM,SACNC,KAAMC,qBAER,CACEF,KAAM,SACNC,KAAMC,qBAER,CACEF,KAAM,WACNC,KAAMC,qBAER,CACEF,KAAM,cACNC,KAAMC,qBAER,CACEF,KAAM,QACNC,KAAMC,qBAER,CACEF,KAAM,MACNC,KAAMC,sBCnXJC,EAAUC,SAASC,cAAc,YACjCC,EAAUF,SAASC,cAAc,SACjCE,EAASH,SAASC,cAAc,WAEtCC,EAAQE,iBAAiB,SA8BzB,SAA6BC,GAE3B,MAAMC,UAAEA,EAASC,YAAEA,EAAWC,SAAEA,EAAQC,UAAEA,GAAcJ,EAAEK,OAC1D,GAAkB,OAAdJ,GAAoC,MAAdA,GAAmC,KAAdG,EAC7C,OAEF,GAAkB,MAAdH,EACF,OAAOC,EAAYE,UAAY,YAGjCD,EAAS,GAAGC,UAAY,W,IAvC1BN,EAAOC,iBAAiB,SASxB,WACE,IAAKL,EAAQU,UAGX,OAFCV,EAAQU,UAAY,YACrBE,EAAK,WAAYZ,EAAQU,WAG3BV,EAAQU,UAAY,GAClBE,EAAK,WAAYZ,EAAQU,U,IAf7B,MAAMG,EAAQC,aAAaC,QAAQ,YAGnC,SAASH,EAAKI,EAAKC,GACfH,aAAaI,QAAQF,EAAKC,E,CAH9BjB,EAAQU,UAAYG,EAiBpB,MAQMM,EARU,CAACC,IACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,MAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,KACzCD,EAAMC,GAAID,EAAMG,IAAM,CAACH,EAAMG,GAAIH,EAAMC,G,CAE1C,OAAOD,CAAK,EAGQO,CAAQ/B,GAgB9B,MAAMgC,EAAiCT,EAKlCU,KAAI,EAAChC,KAAEA,EAAIC,KAAEA,KACL,qDACeD,kCAAqCC,+BAG5DgC,KAAK,IATV3B,EAAQ4B,mBAAmB,aAAcH","sources":["src/js/words.js","src/js/main.js"],"sourcesContent":["const gerund = \"gerund\";\nconst infinitive = 'infinitive';\n\nexport const listItems = [\n  {\n    word: 'acknowledge',\n    type: gerund,\n  },\n  {\n    word: 'accuse of',\n    type: gerund,\n  },\n  {\n    word: 'admit',\n    type: gerund,\n  },\n  {\n    word: 'anticipate',\n    type: gerund,\n  },\n  {\n    word: 'appreciate',\n    type: gerund,\n  },\n  {\n    word: 'avoid',\n    type: gerund,\n  },\n  {\n    word: 'complete',\n    type: gerund,\n  },\n  {\n    word: 'consider',\n    type: gerund,\n  },\n  {\n    word: 'defer',\n    type: gerund,\n  },\n  {\n    word: 'delay',\n    type: gerund,\n  },\n  {\n    word: 'deny',\n    type: gerund,\n  },\n  {\n    word: 'discuss',\n    type: gerund,\n  },\n  {\n    word: 'entail',\n    type: gerund,\n  },\n  {\n    word: 'look after',\n    type: gerund,\n  },\n  {\n    word: 'insist on',\n    type: gerund,\n  },\n  {\n    word: 'involve',\n    type: gerund,\n  },\n  {\n    word: 'justify',\n    type: gerund,\n  },\n  {\n    word: 'mention',\n    type: gerund,\n  },\n  {\n    word: 'plan on',\n    type: gerund,\n  },\n  {\n    word: 'postpone',\n    type: gerund,\n  },\n  {\n    word: 'recall',\n    type: gerund,\n  },\n  {\n    word: 'resent',\n    type: gerund,\n  },\n  {\n    word: 'recommend',\n    type: gerund,\n  },\n  {\n    word: 'resist',\n    type: gerund,\n  },\n  {\n    word: 'risk',\n    type: gerund,\n  },\n  {\n    word: 'sanction',\n    type: gerund,\n  },\n  {\n    word: 'suggest',\n    type: gerund,\n  },\n  {\n    word: 'tolerate',\n    type: gerund,\n  },\n  {\n    word: 'dislike',\n    type: gerund,\n  },\n  {\n    word: 'enjoy',\n    type: gerund,\n  },\n  {\n    word: 'finish',\n    type: gerund,\n  },\n  {\n    word: 'can’t help',\n    type: gerund,\n  },\n  {\n    word: 'keep',\n    type: gerund,\n  },\n  {\n    word: 'miss',\n    type: gerund,\n  },\n  {\n    word: 'mind',\n    type: gerund,\n  },\n  {\n    word: 'postpone',\n    type: gerund,\n  },\n  {\n    word: 'practice',\n    type: gerund,\n  },\n  {\n    word: 'quit',\n    type: gerund,\n  },\n  {\n    word: 'recollect',\n    type: gerund,\n  },\n  {\n    word: 'resent',\n    type: gerund,\n  },\n  {\n    word: 'stop',\n    type: gerund,\n  },\n  {\n    word: 'understand',\n    type: gerund,\n  },\n  {\n    word: 'afford',\n    type: infinitive,\n  },\n  {\n    word: 'agree',\n    type: infinitive,\n  },\n  {\n    word: 'appear',\n    type: infinitive,\n  },\n  {\n    word: 'arrange',\n    type: infinitive,\n  },\n  {\n    word: 'beg',\n    type: infinitive,\n  },\n  {\n    word: 'care',\n    type: infinitive,\n  },\n  {\n    word: 'claim',\n    type: infinitive,\n  },\n  {\n    word: 'consent',\n    type: infinitive,\n  },\n  {\n    word: 'decide',\n    type: infinitive,\n  },\n  {\n    word: 'demand',\n    type: infinitive,\n  },\n  {\n    word: 'deserve',\n    type: infinitive,\n  },\n  {\n    word: 'expect',\n    type: infinitive,\n  },\n  {\n    word: 'fail',\n    type: infinitive,\n  },\n  {\n    word: 'hesitate',\n    type: infinitive,\n  },\n  {\n    word: 'hope',\n    type: infinitive,\n  },\n  {\n    word: 'learn',\n    type: infinitive,\n  },\n  {\n    word: 'manage',\n    type: infinitive,\n  },\n  {\n    word: 'neglect',\n    type: infinitive,\n  },\n  {\n    word: 'need',\n    type: infinitive,\n  },\n  {\n    word: 'offer',\n    type: infinitive,\n  },\n  {\n    word: 'plan',\n    type: infinitive,\n  },\n  {\n    word: 'prepare',\n    type: infinitive,\n  },\n  {\n    word: 'pretend',\n    type: infinitive,\n  },\n  {\n    word: 'promise',\n    type: infinitive,\n  },\n  {\n    word: 'refuse',\n    type: infinitive,\n  },\n  {\n    word: 'seem',\n    type: infinitive,\n  },\n  {\n    word: 'struggle',\n    type: infinitive,\n  },\n  {\n    word: 'swear',\n    type: infinitive,\n  },\n  {\n    word: 'threaten',\n    type: infinitive,\n  },\n  {\n    word: 'volunteer',\n    type: infinitive,\n  },\n  {\n    word: 'wait',\n    type: infinitive,\n  },\n  {\n    word: 'want',\n    type: infinitive,\n  },\n  {\n    word: 'wish',\n    type: infinitive,\n  },\n  {\n    word: 'ask',\n    type: infinitive,\n  },\n  {\n    word: 'intend',\n    type: infinitive,\n  },\n  {\n    word: 'mean',\n    type: infinitive,\n  },\n  {\n    word: 'talk',\n    type: infinitive,\n  },\n  {\n    word: 'can’t bear',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'advise',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'begin',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'continue',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'forget',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'hate',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'like',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'love',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'prefer',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'regret',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'remember',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'can’t stand',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'start',\n    type: gerund + '/' + infinitive,\n  },\n  {\n    word: 'try',\n    type: gerund + '/' + infinitive,\n  },\n];\n","// Add imports above this line\nimport { listItems } from './words.js';\n\nconst section = document.querySelector(\"#section\");\nconst gallery = document.querySelector(\".list\");\nconst toggle = document.querySelector(\".toggle\");\n\ngallery.addEventListener('click', handleWordIconClick);\ntoggle.addEventListener('click', changeTheme);\nconst theme = localStorage.getItem('ui-theme');\nsection.className = theme;\n\nfunction save(key, value) {\n    localStorage.setItem(key, value);\n\n}\n\nfunction changeTheme() {\n  if (!section.className) {\n    (section.className = 'dark');\n    save('ui-theme', section.className);\n    return;\n  }\n  section.className = \"\";\n    save('ui-theme', section.className);\n}\n\nconst shuffle = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}; \n\nconst shuffledArray = shuffle(listItems); \n\nfunction handleWordIconClick(e) {\n\n  const { localName, nextSibling, children, className } = e.target;\n  if (localName !== 'li' && localName !== 'p' || className === \"\") {\n    return;\n  }\n  if (localName === 'p') {\n    return nextSibling.className = 'type-text';\n  }\n\n  children[1].className = 'type-text';\n\n}\n\nconst markupCards = createCardsMarckup(shuffledArray);\ngallery.insertAdjacentHTML(\"afterbegin\", markupCards);\n\nfunction createCardsMarckup(elements) {\n  return elements\n    .map(({ word, type }) => {\n      return `<li class=\"word_item\">\n          <p class=\"text\">${word}</p><div class=\"is_hidden\"><p>${type}</p></div>\n        </li>`;\n    })\n    .join('');\n}\n\n\n// Change code below this line\n\n"],"names":["$a7a460f4fb78144e$export$b5ef8d197d88de83","word","type","$a7a460f4fb78144e$var$gerund","$d706c914d748cb55$var$section","document","querySelector","$d706c914d748cb55$var$gallery","$d706c914d748cb55$var$toggle","addEventListener","e","localName","nextSibling","children","className","target","$d706c914d748cb55$var$save","$d706c914d748cb55$var$theme","localStorage","getItem","key","value","setItem","$d706c914d748cb55$var$shuffledArray","array","i","length","j","Math","floor","random","$d706c914d748cb55$var$shuffle","$d706c914d748cb55$var$markupCards","map","join","insertAdjacentHTML"],"version":3,"file":"index.84e16207.js.map"}