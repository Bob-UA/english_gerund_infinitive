{"mappings":"AAAA,MAGaA,EAAY,CACvB,CACEC,KAAM,cACNC,KANW,UAQb,CACED,KAAM,cACNC,KAVW,UAYb,CACED,KAAM,QACNC,KAdW,UAgBb,CACED,KAAM,SACNC,KAlBW,UAoBb,CACED,KAAM,aACNC,KAtBW,UAwBb,CACED,KAAM,aACNC,KA1BW,UA4Bb,CACED,KAAM,QACNC,KA9BW,UAgCb,CACED,KAAM,WACNC,KAlCW,UAoCb,CACED,KAAM,WACNC,KAtCW,UAwCb,CACED,KAAM,QACNC,KA1CW,UA4Cb,CACED,KAAM,QACNC,KA9CW,UAgDb,CACED,KAAM,OACNC,KAlDW,UAoDb,CACED,KAAM,UACNC,KAtDW,UAwDb,CACED,KAAM,SACNC,KA1DW,UA4Db,CACED,KAAM,eACNC,KA9DW,UAgEb,CACED,KAAM,cACNC,KAlEW,UAoEb,CACED,KAAM,UACNC,KAtEW,UAwEb,CACED,KAAM,UACNC,KA1EW,UA4Eb,CACED,KAAM,UACNC,KA9EW,UAgFb,CACED,KAAM,YACNC,KAlFW,UAoFb,CACED,KAAM,WACNC,KAtFW,UAwFb,CACED,KAAM,SACNC,KA1FW,UA4Fb,CACED,KAAM,SACNC,KA9FW,UAgGb,CACED,KAAM,YACNC,KAlGW,UAoGb,CACED,KAAM,SACNC,KAtGW,UAwGb,CACED,KAAM,OACNC,KA1GW,UA4Gb,CACED,KAAM,WACNC,KA9GW,UAgHb,CACED,KAAM,UACNC,KAlHW,UAoHb,CACED,KAAM,iBACNC,KAtHW,UAwHb,CACED,KAAM,WACNC,KA1HW,UA4Hb,CACED,KAAM,SACNC,KA7He,cA+HjB,CACED,KAAM,QACNC,KAjIe,cAmIjB,CACED,KAAM,SACNC,KArIe,cAuIjB,CACED,KAAM,UACNC,KAzIe,cA2IjB,CACED,KAAM,MACNC,KA7Ie,cA+IjB,CACED,KAAM,OACNC,KAjJe,cAmJjB,CACED,KAAM,QACNC,KArJe,cAuJjB,CACED,KAAM,UACNC,KAzJe,cA2JjB,CACED,KAAM,SACNC,KA7Je,cA+JjB,CACED,KAAM,SACNC,KAjKe,cAmKjB,CACED,KAAM,UACNC,KArKe,cAuKjB,CACED,KAAM,SACNC,KAzKe,cA2KjB,CACED,KAAM,OACNC,KA7Ke,cA+KjB,CACED,KAAM,WACNC,KAjLe,cAmLjB,CACED,KAAM,OACNC,KArLe,cAuLjB,CACED,KAAM,QACNC,KAzLe,cA2LjB,CACED,KAAM,SACNC,KA7Le,cA+LjB,CACED,KAAM,UACNC,KAjMe,cAmMjB,CACED,KAAM,OACNC,KArMe,cAuMjB,CACED,KAAM,QACNC,KAzMe,cA2MjB,CACED,KAAM,OACNC,KA7Me,cA+MjB,CACED,KAAM,UACNC,KAjNe,cAmNjB,CACED,KAAM,UACNC,KArNe,cAuNjB,CACED,KAAM,UACNC,KAzNe,cA2NjB,CACED,KAAM,SACNC,KA7Ne,cA+NjB,CACED,KAAM,OACNC,KAjOe,cAmOjB,CACED,KAAM,WACNC,KArOe,cAuOjB,CACED,KAAM,QACNC,KAzOe,cA2OjB,CACED,KAAM,WACNC,KA7Oe,cA+OjB,CACED,KAAM,YACNC,KAjPe,cAmPjB,CACED,KAAM,OACNC,KArPe,cAuPjB,CACED,KAAM,OACNC,KAzPe,cA2PjB,CACED,KAAM,OACNC,KA7Pe,eCEbC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,SAYzB,SAA6BC,GAC3B,GAA2B,OAAvBA,EAAEC,OAAOC,UACX,OAEFF,EAAEC,OAAOE,SAAS,GAAGC,UAAY,W,IAdnC,MAQMC,EARU,CAACC,IACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,MAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,KACzCD,EAAMC,GAAID,EAAMG,IAAM,CAACH,EAAMG,GAAIH,EAAMC,G,CAE1C,OAAOD,CAAK,EAGQO,CAAQpB,GAU9B,MAAMqB,EAAiCT,EAKlCU,KAAI,EAACrB,KAAEA,EAAIC,KAAEA,KACL,qDACeD,kCAAqCC,+BAG5DqB,KAAK,IATVpB,EAAQqB,mBAAmB,aAAcH","sources":["src/js/words.js","src/js/index.js"],"sourcesContent":["const gerund = \"gerund\";\nconst infinitive = 'infinitive';\n\nexport const listItems = [\n  {\n    word: 'acknowledge',\n    type: gerund,\n  },\n  {\n    word: '* accuse of',\n    type: gerund,\n  },\n  {\n    word: 'admit',\n    type: gerund,\n  },\n  {\n    word: 'advise',\n    type: gerund,\n  },\n  {\n    word: 'anticipate',\n    type: gerund,\n  },\n  {\n    word: 'appreciate',\n    type: gerund,\n  },\n  {\n    word: 'avoid',\n    type: gerund,\n  },\n  {\n    word: 'complete',\n    type: gerund,\n  },\n  {\n    word: 'consider',\n    type: gerund,\n  },\n  {\n    word: 'defer',\n    type: gerund,\n  },\n  {\n    word: 'delay',\n    type: gerund,\n  },\n  {\n    word: 'deny',\n    type: gerund,\n  },\n  {\n    word: 'discuss',\n    type: gerund,\n  },\n  {\n    word: 'entail',\n    type: gerund,\n  },\n  {\n    word: '* look after',\n    type: gerund,\n  },\n  {\n    word: '* insist on',\n    type: gerund,\n  },\n  {\n    word: 'involve',\n    type: gerund,\n  },\n  {\n    word: 'justify',\n    type: gerund,\n  },\n  {\n    word: 'mention',\n    type: gerund,\n  },\n  {\n    word: '* plan on',\n    type: gerund,\n  },\n  {\n    word: 'postpone',\n    type: gerund,\n  },\n  {\n    word: 'recall',\n    type: gerund,\n  },\n  {\n    word: 'resent',\n    type: gerund,\n  },\n  {\n    word: 'recommend',\n    type: gerund,\n  },\n  {\n    word: 'resist',\n    type: gerund,\n  },\n  {\n    word: 'risk',\n    type: gerund,\n  },\n  {\n    word: 'sanction',\n    type: gerund,\n  },\n  {\n    word: 'suggest',\n    type: gerund,\n  },\n  {\n    word: '* take care of',\n    type: gerund,\n  },\n  {\n    word: 'tolerate',\n    type: gerund,\n  },\n  {\n    word: 'afford',\n    type: infinitive,\n  },\n  {\n    word: 'agree',\n    type: infinitive,\n  },\n  {\n    word: 'appear',\n    type: infinitive,\n  },\n  {\n    word: 'arrange',\n    type: infinitive,\n  },\n  {\n    word: 'beg',\n    type: infinitive,\n  },\n  {\n    word: 'care',\n    type: infinitive,\n  },\n  {\n    word: 'claim',\n    type: infinitive,\n  },\n  {\n    word: 'consent',\n    type: infinitive,\n  },\n  {\n    word: 'decide',\n    type: infinitive,\n  },\n  {\n    word: 'demand',\n    type: infinitive,\n  },\n  {\n    word: 'deserve',\n    type: infinitive,\n  },\n  {\n    word: 'expect',\n    type: infinitive,\n  },\n  {\n    word: 'fail',\n    type: infinitive,\n  },\n  {\n    word: 'hesitate',\n    type: infinitive,\n  },\n  {\n    word: 'hope',\n    type: infinitive,\n  },\n  {\n    word: 'learn',\n    type: infinitive,\n  },\n  {\n    word: 'manage',\n    type: infinitive,\n  },\n  {\n    word: 'neglect',\n    type: infinitive,\n  },\n  {\n    word: 'need',\n    type: infinitive,\n  },\n  {\n    word: 'offer',\n    type: infinitive,\n  },\n  {\n    word: 'plan',\n    type: infinitive,\n  },\n  {\n    word: 'prepare',\n    type: infinitive,\n  },\n  {\n    word: 'pretend',\n    type: infinitive,\n  },\n  {\n    word: 'promise',\n    type: infinitive,\n  },\n  {\n    word: 'refuse',\n    type: infinitive,\n  },\n  {\n    word: 'seem',\n    type: infinitive,\n  },\n  {\n    word: 'struggle',\n    type: infinitive,\n  },\n  {\n    word: 'swear',\n    type: infinitive,\n  },\n  {\n    word: 'threaten',\n    type: infinitive,\n  },\n  {\n    word: 'volunteer',\n    type: infinitive,\n  },\n  {\n    word: 'wait',\n    type: infinitive,\n  },\n  {\n    word: 'want',\n    type: infinitive,\n  },\n  {\n    word: 'wish',\n    type: infinitive,\n  },\n];\n","// Add imports above this line\nimport { listItems } from './words.js';\n\nconst gallery = document.querySelector(\".list\");\n\ngallery.addEventListener('click', handleWordIconClick);\n\nconst shuffle = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}; \n\nconst shuffledArray = shuffle(listItems); \n\nfunction handleWordIconClick(e) {\n  if (e.target.localName !== 'li') {\n    return;\n  }\n  e.target.children[1].className = 'type-text';\n\n}\n\nconst markupCards = createCardsMarckup(shuffledArray);\ngallery.insertAdjacentHTML(\"afterbegin\", markupCards);\n\nfunction createCardsMarckup(elements) {\n  return elements\n    .map(({ word, type }) => {\n      return `<li class=\"word_item\">\n          <p class=\"text\">${word}</p><div class=\"is_hidden\"><p>${type}</p></div>\n        </li>`;\n    })\n    .join('');\n}\n\n\n// Change code below this line\n\n"],"names":["$a7a460f4fb78144e$export$b5ef8d197d88de83","word","type","$85a5f86b715fe7db$var$gallery","document","querySelector","addEventListener","e","target","localName","children","className","$85a5f86b715fe7db$var$shuffledArray","array","i","length","j","Math","floor","random","$85a5f86b715fe7db$var$shuffle","$85a5f86b715fe7db$var$markupCards","map","join","insertAdjacentHTML"],"version":3,"file":"index.addcc365.js.map"}